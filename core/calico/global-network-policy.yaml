
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-nginx-ingress-team-namespaces
spec:
  order: 950
  types:
  - Ingress
  ingress:
  - action: Allow
    destination:
      namespaceSelector: type == "team-namespace"  
    source: 
      namespaceSelector: name == "nginx-ingress"
---

apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-team-namespaces-egress-internet
spec:
  order: 960
  types:
  - Egress
  egress:
  - action: Allow
    protocol: TCP
    destination:
      nets:
        - 0.0.0.0/0
    source: 
      namespaceSelector: type == "team-namespace"
--- 

# Allow kube-system
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-team-namespaces-egress-kube-system
spec:
  order: 967
  egress:
  - action: Allow
    destination: 
      namespaceSelector: kubernetes.io/metadata.name == "kube-system"
    source: 
      namespaceSelector: type == "team-namespace"
  types:
  - Egress
---  

# Allow kube-system
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-kube-system
spec:
  order: 968
  ingress:
  - action: Allow
    destination: 
      namespaceSelector: kubernetes.io/metadata.name == "kube-system"
    source: {}
  egress:
  - action: Allow
    destination: {}
    source: 
      namespaceSelector: kubernetes.io/metadata.name == "kube-system"
  types:
  - Ingress
  - Egress
---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-kube-system-internal
spec:
  order: 969
  namespaceSelector: kubernetes.io/metadata.name == "kube-system"
  ingress:
    - action: Allow
      source:
        namespaceSelector: kubernetes.io/metadata.name == "kube-system"
  egress:
    - action: Allow
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "kube-system"
---

apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-system-namespaces-egress
spec:
  order: 970
  types:
  - Egress
  egress:
  - action: Allow  
    protocol: TCP
    source: 
      namespaceSelector: kubernetes.azure.com/managedby == "aks" || kubernetes.io/metadata.name in {"app-config-service" ,"cert-manager", "calico-apiserver"}
--- 

# Allow dns-egress
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-dns-egress
spec:
  order: 980
  types:
  - Egress
  egress:
  - action: Allow
    protocol: UDP
    destination:
      nets:
        - 0.0.0.0/0
      ports:
        - 53
---

# Allow coredns
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-coredns
spec:
  order: 990
  selector: k8s-app == "kube-dns"
  types:
  - Ingress
  - Egress
  
  egress:
  - action: Allow
  ingress:
  - action: Allow
---

# Deny All
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: deny-all
spec:
  order: 1000
  types:
  - Ingress
  - Egress
---


